---
title: Cleaning and exploring data in R
format: html
engine: knitr
webr: 
  show-startup-message: false
  show-header-message: false
  home-dir: '/home/r-user/'
  packages: ['ggplot2', 'dplyr']
filters:
  - webr
execute:
  freeze: auto
---

A crucial first step of data analysis is exploring the dataset (and then cleaning, as needed). Today, we will practice exploring and cleaning data in R.

### Learning objectives

By the end of this session, students should be able to:

-   distinguish between the different types of variables

-   use the tidyverse functions to explore and clean data in R

-   use ggplot2 to visualize data

Note: If you are comfortable with "base R," you can use that for data cleaning and exploration this semester. However, I encourage you to learn the tidyverse functions!

## Types of variables in our data

Numeric variables take numerical values and it makes sense to perform calculations on the values (e.g., addition, mean)

-   Discrete variables can not take decimal values (e.g., Number of required statistics courses in a major)

-   Continuous variables can take decimal values (e.g., height in cm)

Categorical variables are variables that have categories, where each category is called a level

-   Nominal variables do not have an order (e.g., eye color)

-   Ordinal variables do have an order (e.g., education categories)

## Types of variables in R

-   Numeric/double: a number that can take decimal values

-   Integer: a number that takes integer values

-   Character: a string (denoted by quotes)

-   Logical: TRUE/FALSE

### Survey

First, [complete this survey](https://forms.gle/25gMMLaWp6QDuPxj7). We'll use this as our dataset for some practice exercises.

### Exercise

In your group, discuss the following:

1.  Classify each of the survey questions as discrete, continuous, nominal, or ordinal.
2.  Can you identify how each variable will be stored in R before you read in the data?
3.  What does it mean to explore data?
4.  What does it mean to clean data? Identify how the survey data may need to be cleaned just by looking at the questions.

## First steps in R

Hopefully you have already installed R/RStudio on your computer. If so, you can copy and paste the code below into your own script. If you haven't yet installed R/RStudio, you can run code directly from this page.

```{webr-r}
webr::install("tidyverse") #you don't need this if running R locally
library(tidyverse)
```

```{webr-r}
survey <- read.csv("https://raw.githubusercontent.com/anlane611/datasets/main/BootcampSurvey.csv", header=TRUE)
glimpse(survey)
```

Let's remove the timestamp variable

```{webr-r}
survey_sub <- survey |> 
              select(-c("Timestamp"))
```

Let's make our variable names more concise (but still descriptive!)

```{webr-r}
names(survey_sub) <- c()
```

## Cleaning and exploring variables

### Siblings (changing a particular value)

Let's start with the Siblings variable. What information do we need to know to clean the variable?

```{webr-r}
survey_sub |> count(Siblings)
```

Always always always:

-   create a new variable instead of overwriting the original

-   perform a quality control check

```{webr-r}
survey_sub |> count(Siblings)

survey_sub <- survey_sub |> #use the assignment <- since we're creating a var
              mutate(Siblings_clean = case_when(
                      Siblings== ~ ,
                      TRUE ~ as.numeric(Siblings)
                      ))

## How can we do a quality control check?

```

### Languages (Creating categories)

```{webr-r}
survey_sub |> 
```

Often, we need to combine categories if we have too few observations in multiple categories. Let's say we want to create a new numeric variable that collapses the Languages variable into 3 categories using the following values:

0: 0 siblings

1: 1-3 siblings

2: 4 or more siblings

```{webr-r}
survey_sub <- survey_sub |>
  mutate(Lang_cat = case_when(
    Languages == ~ ,
    Languages < ~ ,
    TRUE ~ 
  ))


## How can we perform a quality control check in this case? Use the code below as a hint and replace the blanks

survey_sub |> 
  group_by(________) |> #this will group your output by a (categorical) variable
  summarise(min(________), max(________))
```

## 

### Sushi (outliers/implausible values)

Now consider the sushi variable.

```{webr-r}
survey_sub |> 
```

It's important to pay attention to implausible values. What would be an implausible value in this case? How should we handle it?

```{webr-r}

```

## Exercises

In your group, complete the following:

1.  For the application area of interest variable, how many students responded with "other"? What does this say about the survey design?
2.  What proportion of the class plays an instrument?
3.  Convert the Age variable to a continuous variable so that we have more information about specific ages.
4.  Create a stacked histogram of the Sushi variable for those who would like to live on the beach vs those who would like to live in a cabin in the woods. Change the color of the bars to a new color of your choice. Add a descriptive title and axis labels.
5.  How can we visualize the relationship between application area of interest and course excitement?
6.  Create a new variable called "Excitement_num" that stores only the numeric value of the Excitement variable (e.g., 1 instead of "1 (I am dreading this)"). Instead of typing out each answer choice, use the "substr" and "as.numeric" functions. You can learn how the substr function works by typing `?substr` in the console.
