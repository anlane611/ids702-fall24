{
  "hash": "a3e8cb4005e5cc63a089f4214a47f6ab",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Key Principles of Statistics\nexecute:\n  eval: false\n  freeze: auto\n---\n\n\n\n\n### Learning objectives\n\nBy the end of this session, students should be able to:\n\n-   distinguish between a population and a sample\n\n-   describe sampling variability\n\n-   fit a simple linear regression model in R\n\n### Warm-up discussion question\n\nIn a group of 3-4 students, discuss what you think it means to conduct statistical inference.\n\n## Load the data\n\nToday we will use the `births14` dataset in the openintro R package. You can read more about the dataset and see a data dictionary [at this link](http://openintrostat.github.io/openintro/reference/births14.html).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#load the packages we need\nlibrary(openintro)\nlibrary(tidyverse)\nlibrary(tidymodels)\n\n#load the dataset from the openintro package\ndata(births14)\n\n#get an overview of the data\nglimpse(births14)\n```\n:::\n\n\n\n\n## Exercise\n\nExplore the births14 data:\n\n-   Using the data dictionary at the link above, classify the variables as numeric or categorical. Do the variables seem to be correctly structured in R?\n\n-   Use the `summary()` function to determine if there are missing values in the dataset\n\n## Hypothetically...\n\nImagine that this dataset contains information about the entire population of interest (e.g., all babies born in Bull City). Then, say we have the following research question:\n\nWhat is the relationship between length of pregnancy in weeks and weight of the baby in pounds in Bull City?\n\nWe can explore this relationship graphically:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(births14, aes(x=weeks, y=weight))+\n  geom_point()+\n  labs(x=\"length of pregnancy (weeks)\", y=\"baby weight (lbs)\") \n  #always use labels!\n```\n:::\n\n\n\n\n## Linear Regression\n\nTo further characterize the relationship between length of pregnancy and baby weight, we can fit a line to the plot:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_bullcity <- linear_reg() |> \n  set_engine(\"lm\") |>\n  fit(weight ~ weeks, data=births14)\n\ntidy(mod_bullcity, conf.int=TRUE)\n```\n:::\n\n\n\n\n### Exercise\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(births14, aes(x=weeks, y=weight))+\n  geom_point()+\n  labs(x=\"length of pregnancy (weeks)\",y=\"baby weight (lbs)\")+\n  geom_smooth(method=\"lm\",se=F)\n```\n:::\n\n\n\n\n-   Looking at the `estimate` column of the `tidy` output, how would you interpret the intercept here? how would you interpret the weeks estimate?\n\n### Standard error\n\nTo better conceptualize the standard error, consider the premise above that these data represent the entire city. Now imagine that we could not actually obtain all of these data. Instead, we were only able to obtain a sample of 200 babies. Using only a sample of 200, if we fit a line in the same way as above, we have many different lines that we could have obtained:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(823)\nbirths_sample1 <- births14 |> slice_sample(n=200)\n\nggplot(births_sample1, aes(x=weeks, y=weight))+\n  geom_point()+\n  labs(x=\"length of pregnancy (weeks)\",y=\"baby weight (lbs)\")+\n  geom_smooth(method=\"lm\",se=F)\n\nmod_sample1 <- linear_reg() |> \n  set_engine(\"lm\") |>\n  fit(weight ~ weeks, data=births_sample1)\n\ntidy(mod_sample1, conf.int=TRUE)\n```\n:::\n\n\n\n\n### Exercise\n\nFill in the code below to simulate the process of taking 250 different samples and store the weeks coefficient estimate in a vector\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweeks.coefs <- c() #create empty vector to store coefficient estimates\n\nfor(i in 1:250){ #create loop for 250 different samples\n  print(i)\n  set.seed(823+i) #set a unique seed each iteration\n  \n  #sample data\n  births_sample <-\n  \n  #fit model\n  mod_sample <- \n    \n  #store output\n  weeks.coefs[i] <- tidy(mod_sample)$estimate[2]\n}\n```\n:::\n\n\n\n\n \n\n \n\n \n\nNow let's plot the coefficient estimates we have for the 250 samples:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweeks.coefs.dat <- data.frame(weeks.coefs)\n\nggplot(weeks.coefs.dat, aes(x=weeks.coefs))+\n  geom_histogram()+\n  labs(x=\"weeks coefficient estimate\")\n```\n:::\n\n\n\n\nWe see that there is variability in the coefficient estimates for weeks. The standard deviation of this collection of possible estimates is the standard error of the estimate.\n\n### Confidence interval and p-value\n\nWe can also use this collection of estimates to provide a plausible range for the \"true\" coefficient value:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquantile(weeks.coefs, probs=c(.025,.975))\n```\n:::\n\n\n\n\nOr, we can look at the collection of estimates and see that none of them are 0. So, because we collected 250 different samples and none of them had a coefficient estimate of 0, we are quite confident that the \"true\" coefficient is not zero.\n\n \n\n \n\nIn reality, we typically cannot many samples from the same population. So, we often rely on assumptions related to probability distributions to derive confidence intervals and p-values.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}